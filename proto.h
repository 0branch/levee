/*                                     
** levee function prototypes           
** (generated by cl -Gms -Ox -nologo -I../tools -Zg)  
*/                                     
#ifndef _PROTO_D                       
#define _PROTO_D                       
char  *badccl(char  *src);
char  *class(char  c);
char  *dodash(char  *src);
char  *findbounds(char  *ip);
char  *findparse(char  *src,int  *idx,int  start);
char  *getarg(void);
char  *getname(void);
char  *makepat(char  *string,char  delim);
char  *search(char  *pat,int  *start);
char  *basename(char  *s);
char  *glob(char  *path,struct  glob_t *dta);
char  editcore(void);
char  esc(char  * *s);
char  findCP(int  curp,int  *newpos,char  cmd);
char  line(char  *s,int  start,int  endd,int  *size);
char  peekc(void);
char  readchar(void);
int  REmatch(char  *pattern,int  start,int  end);
int  addarg(char  *name);
int  addfile(struct  _iobuf *f,int  start,int  endd,int  *size);
int  adjuster(int  sleft,int  endd,int  sw);
int  ahead(int  i);
int  allowintr(void);
int  amatch(char  *pattern,char  *start,char  *endp);
int  args(void);
int  back(int  i);
int  back_up(char  c);
int  backup(char  *name);
int  bchar(int  pos,int  npos);
int  bigreplace(void);
int  bseekeol(int  origin);
int  cclass(unsigned char  c);
int  chop(int  start,int  *endd,int  visual,int  *query);
int  clrmsg(void);
int  clrprompt(void);
int  concatch(char  c);
int  copyover(struct  undostack *save_undo,int  *curp);
int  cutandpaste(void);
int  delete_to_undo(struct  undostack *u,int  start,int  lump);
int  deletion(int  low,int  high);
int  do_file(char  *fname,char  *mode,int  *noquit);
int  doaddwork(char  *token,int  *argcp,char  * * *argvp);
int  docommand(char  cmd);
int  doinput(char  *name);
int  doins(int  flag);
int  doyank(int  low,int  high);
int  editfile(void);
int  errmsg(char  *msg);
int  error(void);
int  exec(char  *cmd,char  *mode,int  *noquit);
int  execmode(char  emode);
int  exmacro(void);
int  expandargs(char  *name,int  *argcp,char  * * *argvp);
int  fchar(int  pos,int  npos);
int  findDLE(int  start,int  *endd,int  limit,int  dle);
int  findarg(char  *name);
int  findback(char  *pattern,int  start,int  endp);
int  findcol(int  ip,int  col);
int  findfwd(char  *pattern,int  start,int  endp);
int  fixcore(int  *topp);
int  fixmarkers(int  base,int  offset);
int  fixupline(int  dft);
int  format(char  *out,unsigned short  c);
int  fseekeol(int  origin);
int  gcount(void);
int  getKey(void);
int  getcontext(char  c,int  begline);
int  getline(char  *str);
int  initialize(int  count,char  * *args);
int  inputf(char  *fname,int  newbuf);
int  insert_to_undo(struct  undostack *u,int  start,int  size);
int  insertion(int  count,int  openflag,int  *dp,int  *yp,int  visual);
int  insertmacro(char  *cmdstr,int  count);
int  join(int  count);
int  killargs(int  *argcp,char  * * *argvp);
int  locate(char  *pattern,char  *linep);
int  lookup(char  c);
int  macrocommand(void);
int  makedest(char  *str,int  start,int  ssize,int  size);
int  map(int  insert);
int  match(int  p);
int  max(int  a,int  b);
int  min(int  a,int  b);
int  move_to_undo(struct  undostack *u,int  start,int  lump);
int  movearound(char  cmd);
int  moveleft(char  *src,char  *dest,int  length);
int  moveright(char  *src,char  *dest,int  length);
int  moveword(int  cp,int  forwd,int  toword);
int  mvcur(int  y,int  x);
int  nextfile(int  prev);
int  nextline(int  advance,int  dest,int  count);
int  nointr(void);
int  numtoa(char  *str,int  num);
int  ok_to_scroll(int  top,int  bottom);
int  oktoedit(int  writeold);
int  omatch(char  *pattern,char  * *cp,char  *endp);
int  outputf(char  *fname);
int  parse(char  *inp);
int  patsize(char  * *pattern);
int  plural(int  num,char  *string);
int  popblock(struct  undostack *u);
int  popmem(struct  undostack *u,int  start,int  size);
int  popw(struct  undostack *u,int  *i);
int  print(void);
int  printall(void);
int  printch(char  c);
int  printi(int  num);
int  println(void);
int  printone(int  i);
int  prints(char  *s);
int  prompt(int  toot,char  *s);
int  pushblock(struct  undostack *u);
int  pushmem(struct  undostack *u,int  start,int  size);
int  pushw(struct  undostack *u,int  i);
int  put(int  before);
int  putback(int  start,int  *newend);
int  putfile(struct  _iobuf *f,int  start,int  endd);
int  putin(struct  undostack *save_undo,int  *curp);
int  readfile(void);
int  redisplay(int  flag);
int  refresh(int  y,int  x,int  start,int  endd,int  rest);
int  resetX(void);
int  scan(int  length,char  tst,char  ch,char  *src);
int  scroll(int  down);
int  scrollback(int  curr);
int  scrollforward(int  curr);
int  sentence(int  start,int  forwd);
int  setX(int  cp);
int  setY(int  cp);
int  setcmd(void);
int  setend(void);
int  setpos(int  loc);
int  settop(int  lines);
int  skip(char  *chars,int  cp,int  step);
int  skipws(int  loc);
int  squiggle(int  endp,char  c,int  dorepl);
int  stamp(char  *s,char  *template);
int  strput(char  *s);
int  swap(int  *a,int  *b);
int  takeout(struct  undostack *save_undo,int  *curp);
int  to_index(int  line);
int  to_line(int  cp);
int  toedit(int  count);
int  tow(int  cp,int  step);
int  undefine(int  i);
int  unmap(void);
int  uputcmd(struct  undostack *u,int  size,int  start,char  cmd);
int  version(void);
int  whatline(void);
int  wr_stat(void);
int  writefile(void);
int  writeline(int  y,int  x,int  start);
int  zdraw(char  code);
int  zerostack(struct  undostack *u);
int  main(int  argc,char  * *argv);
#endif  /*_PROTO_D*/                   
